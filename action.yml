name: 'Deploy'
description: 'Deploy to GCP cloudRun'
inputs:
  env:
    description: 'dev | qa | prod'
    required: true
  key:
    description: 'GCP service key base64 encoded'
    required: true
  serviceName:
    description: 'name of the service'
    required: true
  region:
    description: 'GCP region'
    required: false
    default: 'europe-west4'
runs:
  using: "composite"
  steps:
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: nf-environment-${{ inputs.env }}
    - name: deploy ${{ inputs.env }}
      shell: bash
      env:
        ENV: ${{ inputs.env }}
        GCP_REGION: ${{ inputs.region }}
        GCP_NAME: ${{ inputs.serviceName }}
      run: |
        echo "Authenticate for docker"
        export BASE_REPO=${GCP_REGION}-docker.pkg.dev
        export CONTAINER_REPO=${BASE_REPO}/nf-artifact-repositories/${GCP_NAME}
        export CLOUDRUN_SERVICE=${GCP_NAME}-${ENV}
        export ENV_IMG=${CONTAINER_REPO}/${ENV}:${{ github.sha }}
        export ALL_IMG=${CONTAINER_REPO}/all:${{ github.sha }}
        
        echo ${{ inputs.key }} | base64 --decode > ${HOME}/gcloud-service-key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
        gcloud auth configure-docker --quiet $BASE_REPO
        
        # Check if environment-specific image exists
        if gcloud container images describe ${ENV_IMG} > /dev/null 2>&1; then
          echo "Using existing image ${ENV_IMG}"
          export NEW_IMAGE=${ENV_IMG}
        else
          echo "Environment image not found, checking for 'all' tag"
          # Wait for all-tagged image and retag it
          echo "Wait until image push completed for ${ALL_IMG}"
          timeout 180 bash -c 'until gcloud container images describe ${ALL_IMG} > /dev/null 2>&1; do sleep 1; done'
          echo "Retagging ${ALL_IMG} to ${ENV_IMG}"
          gcloud container images add-tag -q ${ALL_IMG} ${ENV_IMG}
          export NEW_IMAGE=${ENV_IMG}
        fi
        
        echo "Updating the cloudRun service '${CLOUDRUN_SERVICE}'"
        gcloud run deploy ${CLOUDRUN_SERVICE} --image ${NEW_IMAGE} --region ${GCP_REGION}
